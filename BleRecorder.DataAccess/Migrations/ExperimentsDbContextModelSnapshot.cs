// <auto-generated />
using System;
using BleRecorder.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BleRecorder.DataAccess.Migrations
{
    [DbContext(typeof(ExperimentsDbContext))]
    partial class ExperimentsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("BleRecorder.Models.TestSubject.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TestSubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestSubjectId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("BleRecorder.Models.TestSubject.TestSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TestSubjects");
                });

            modelBuilder.Entity("BleRecorder.Models.TestSubject.Measurement", b =>
                {
                    b.HasOne("BleRecorder.Models.TestSubject.TestSubject", "TestSubject")
                        .WithMany("Measurements")
                        .HasForeignKey("TestSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("BleRecorder.Models.TestSubject.MeasuredValue", "ForceData", b1 =>
                        {
                            b1.Property<int>("MeasurementId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("TimeStamp")
                                .HasColumnType("TEXT");

                            b1.Property<float>("Value")
                                .HasColumnType("REAL");

                            b1.HasKey("MeasurementId", "Id");

                            b1.ToTable("MeasuredValue");

                            b1.WithOwner()
                                .HasForeignKey("MeasurementId");
                        });

                    b.Navigation("ForceData");

                    b.Navigation("TestSubject");
                });

            modelBuilder.Entity("BleRecorder.Models.TestSubject.TestSubject", b =>
                {
                    b.Navigation("Measurements");
                });
#pragma warning restore 612, 618
        }
    }
}
