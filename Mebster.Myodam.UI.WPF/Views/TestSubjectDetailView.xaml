<UserControl x:Class="Mebster.Myodam.UI.WPF.Views.TestSubjectDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Mebster.Myodam.UI.WPF.ViewModels"
             xmlns:extensions="clr-namespace:Mebster.Myodam.UI.WPF.Extensions"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:views="clr-namespace:Mebster.Myodam.UI.WPF.Views"
             xmlns:testSubject="clr-namespace:Mebster.Myodam.Models.TestSubject;assembly=Mebster.Myodam.Models"
             xmlns:wpf="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:resouces="clr-namespace:Mebster.Myodam.UI.WPF.Views.Resouces"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="900"
             d:DataContext="{d:DesignInstance viewModels:TestSubjectDetailViewModel, d:IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <GroupStyle x:Key="MeasurementDataGridGroupStyle">
            <GroupStyle.Panel>
                <ItemsPanelTemplate>
                    <DataGridRowsPresenter/>
                </ItemsPanelTemplate>
            </GroupStyle.Panel>
            <GroupStyle.ContainerStyle>
                <Style TargetType="{x:Type GroupItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                <Expander IsExpanded="True" BorderThickness="0" Background="DarkSlateBlue" IsTabStop="False" Style="{x:Null}">
                                    <Expander.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontSize="11" FontStyle="Italic" Foreground="White">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="Grouped by measurement type: {0}, Items: {1}">
                                                        <Binding Path="Name" />
                                                        <Binding Path="ItemCount" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </StackPanel>
                                    </Expander.Header>
                                    <ItemsPresenter />
                                </Expander>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </GroupStyle.ContainerStyle>
            <GroupStyle.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Text="{Binding Type}" />
                    </StackPanel>
                </DataTemplate>
            </GroupStyle.HeaderTemplate>
        </GroupStyle>

        <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                        <Style.Triggers>
                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                <Setter Property="Background" Value="DodgerBlue" />
                                <Setter Property="BorderThickness" Value="0" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <EventSetter Event="PreviewMouseDoubleClick" Handler="Row_PreviewMouseDoubleClick" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness"  Value="2"/>
            <Setter Property="IsSynchronizedWithCurrentItem"  Value="True"/>
            <Setter Property="SelectionUnit"  Value="FullRow"/>
            <Setter Property="SelectionMode"  Value="Single"/>
            <Setter Property="AutoGenerateColumns"  Value="False"/>
            <Setter Property="RowHeaderWidth"  Value="0"/>
            <Setter Property="CanUserAddRows"  Value="False"/>
            <Setter Property="CanUserDeleteRows"  Value="False"/>
            <Setter Property="MinHeight"  Value="100"/>
        </Style>

        <resouces:StatisticChartPointMapper x:Key="chartPointMapper" />
        <resouces:MultiCollectionToVisibilityConverter x:Key="multiCollectionToVisibilityConverter" />
    </UserControl.Resources>

    <resouces:ScrollViewerWithStableOffset Padding="10">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="First name"/>
            <TextBox Grid.Row="1" MaxLength="25" 
                     Text="{Binding FirstName, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

            <Label Grid.Row="2" Content="Last name"/>
            <TextBox Grid.Row="3" MaxLength="25" 
                     Text="{Binding LastName, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

            <Label Grid.Row="4" Content="Notes"/>
            <TextBox Grid.Row="5" Style="{StaticResource NotesTextBox}"
                     Text="{Binding Notes, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

            <Expander Grid.Row="6" Header="Individual settings" 
                      IsExpanded="{Binding Id, Mode=OneWay, Converter={StaticResource idToBooleanConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <views:MechanismParametersView Grid.Column="0"  DataContext="{Binding MechanismParametersVm}"  />
                    <views:StimulationParametersView Grid.Column="1" HorizontalAlignment="Center" DataContext="{Binding StimulationParametersVm}" />
                </Grid>
            </Expander>

            <Expander Grid.Row="8" Header="Measurements" IsExpanded="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid x:Name="MeasurementsGrid" IsSynchronizedWithCurrentItem="True"
                          ItemsSource="{Binding Measurements}">
                        <DataGrid.GroupStyle>
                            <StaticResource ResourceKey="MeasurementDataGridGroupStyle" />
                        </DataGrid.GroupStyle>

                        <b:Interaction.Behaviors>
                            <resouces:IgnoreMouseWheelBehavior />
                        </b:Interaction.Behaviors>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Measurement title" Width="*" IsReadOnly="True"
                                            Binding="{Binding Title}"/>
                            <DataGridTextColumn Header="Experiment Date" Width="130" IsReadOnly="True"
                                            Binding="{Binding Date, StringFormat='{}{0:dd MMM. yyyy, HH:mm}', TargetNullValue='Not completed'}"/>
                            <DataGridTextColumn Header="Max. force" Width="90" IsReadOnly="True"
                                            Binding="{Binding MaxForce, StringFormat='{}{0:0.00} N'}" />
                            <DataGridTextColumn Header="Type" Width="130"  IsReadOnly="True"
                                            Binding="{Binding Type, Converter={StaticResource enumDescriptionConverter}}"/>
                            <DataGridTextColumn Header="Site" Width="60" IsReadOnly="True"
                                            Binding="{Binding SiteDuringMeasurement, Converter={StaticResource enumDescriptionConverter}}"/>
                            <DataGridTextColumn Header="Type" Width="50"  IsReadOnly="True"
                                            Binding="{Binding PositionDuringMeasurement, Converter={StaticResource enumDescriptionConverter}}"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Column="1">
                        <Button Content="Add" extensions:RelayCommandExtensions.IsCommandUpdateEnabled="True"
                            Command="{Binding AddMeasurementCommand}" CommandParameter=""/>
                        <Button Content="Edit" extensions:RelayCommandExtensions.IsCommandUpdateEnabled="True"
                            Command="{Binding EditMeasurementCommand}"/>
                        <Button Content="Remove" extensions:RelayCommandExtensions.IsCommandUpdateEnabled="True"
                            Command="{Binding RemoveMeasurementCommand}"/>
                    </StackPanel>
                </Grid>
            </Expander>

            <Expander Grid.Row="9" 
                      Header="Contraction force progression" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="1" x:Name="GraphInsufficientDataMessage"
                               Text="Insufficient data for statistics"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" Padding="16"
                               Background="{StaticResource MebsterColor}"
                               FontSize="18" FontWeight="DemiBold">
                        <TextBlock.Visibility>
                            <MultiBinding Converter="{StaticResource multiCollectionToVisibilityConverter}">
                                <Binding Path="MaxContractionStatisticValues" />
                                <Binding Path="FatigueStatisticValues" />
                            </MultiBinding>
                        </TextBlock.Visibility>
                    </TextBlock>

                    <wpf:CartesianChart Grid.Row="0" Grid.RowSpan="3" x:Name="StatisticsGraph" Foreground="{StaticResource MebsterColor}"
                                        DisableAnimations="True" MinHeight="230"
                                        LegendLocation="Bottom"
                                        Margin="10 10 10 0">
                        <wpf:CartesianChart.Style>
                            <Style TargetType="wpf:CartesianChart">
                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding ElementName=GraphInsufficientDataMessage, Path=Visibility}" Value="Visible">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <BlurEffect Radius="6" KernelType="Gaussian" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </wpf:CartesianChart.Style>

                        <wpf:CartesianChart.AxisY>
                            <wpf:Axis MinValue="0" Title="Contraction Force [N]" />
                        </wpf:CartesianChart.AxisY>

                        <wpf:CartesianChart.AxisX>
                            <wpf:Axis x:Name="StatisticsGraphXAxis" LabelsRotation="60" Title="Date" />
                        </wpf:CartesianChart.AxisX>

                        <wpf:CartesianChart.SeriesColors>
                            <wpf:ColorsCollection>
                                <Color>Aqua</Color>
                                <Color>Violet</Color>
                            </wpf:ColorsCollection>
                        </wpf:CartesianChart.SeriesColors>

                        <wpf:CartesianChart.Series>
                            <wpf:LineSeries Title="Maximum contraction trend"
                                            Values="{Binding MaxContractionStatisticValues}"
                                            Configuration="{StaticResource chartPointMapper}" />
                            <wpf:LineSeries Title="Fatigue contraction trend"
                                            Values="{Binding FatigueStatisticValues}"
                                            Configuration="{StaticResource chartPointMapper}" />
                        </wpf:CartesianChart.Series>
                    </wpf:CartesianChart>
                </Grid>
            </Expander>

            <StackPanel Grid.Row="10" Orientation="Horizontal">
                <Button Content="Save Subject" extensions:RelayCommandExtensions.IsCommandUpdateEnabled="True"
                    Command="{Binding SaveCommand}"/>
                <Button Content="Delete Subject" extensions:RelayCommandExtensions.IsCommandUpdateEnabled="True"
                    Command="{Binding DeleteCommand}"/>
            </StackPanel>
        </Grid>
    </resouces:ScrollViewerWithStableOffset>
</UserControl>
