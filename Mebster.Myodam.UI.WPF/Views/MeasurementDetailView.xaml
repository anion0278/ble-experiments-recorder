<UserControl x:Class="Mebster.Myodam.UI.WPF.Views.MeasurementDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:testSubject="clr-namespace:Mebster.Myodam.Models.TestSubject;assembly=Mebster.Myodam.Models"
             xmlns:livecharts="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:viewModels="clr-namespace:Mebster.Myodam.UI.WPF.ViewModels"
             xmlns:extensions="clr-namespace:Mebster.Myodam.UI.WPF.Extensions"
             xmlns:System="clr-namespace:System;assembly=System.Runtime"
             xmlns:views="clr-namespace:Mebster.Myodam.UI.WPF.Views"
             xmlns:resouces="clr-namespace:Mebster.Myodam.UI.WPF.Views.Resouces"
             mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="800" 
             d:DataContext="{d:DesignInstance viewModels:MeasurementDetailViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <Style x:Key="MeasurementParamComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MeasurementParamComboBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="IsEnabled" Value="{Binding MeasuredValues,Mode=OneWay, Converter={StaticResource measuredDataLengthToBooleanConverter}}"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=., Converter={StaticResource enumDescriptionConverter}}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <ObjectDataProvider x:Key="MeasurementTypeEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="testSubject:MeasurementType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="MeasurementSiteEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="testSubject:MeasurementSite"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="PositionDuringMeasurementEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="testSubject:PositionDuringMeasurement"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <resouces:ChartPointMapper x:Key="chartPointMapper" />
    </UserControl.Resources>

    <ScrollViewer Padding="10">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Content="Short description" />
            <TextBox Grid.Row="1" MaxLength="40" 
                     Text="{Binding MeasurementDescription, UpdateSourceTrigger=PropertyChanged}" />

            <Label Grid.Row="2" Content="Notes"/>
            <TextBox Grid.Row="3" Style="{StaticResource NotesTextBox}"
                 Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged}" />

            <Grid Grid.Row="4">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0"  Content="Test subject:"/>
                <Label Grid.Row="0" Grid.Column="1" FontWeight="Bold" 
                       Content="{Binding Model.TestSubject.FullName}"/>

                <Label Grid.Row="1" Grid.Column="0" Content="Measurement date:" />
                <Label Grid.Row="1" Grid.Column="1"  FontWeight="Bold" VerticalAlignment="Center" ContentStringFormat="dd MMM. yyyy, HH:mm"
                           Content="{Binding Date, TargetNullValue='Not measured yet'}" />

                <Label Grid.Row="2" Grid.Column="0"  Content="Measurement type:" />
                <ComboBox Grid.Row="2" Grid.Column="1" 
                          SelectedItem="{Binding Type}" Style="{StaticResource MeasurementParamComboBoxStyle}"
                          ItemsSource="{Binding Source={StaticResource MeasurementTypeEnum}}" />

                <Label Grid.Row="3" Grid.Column="0"  Content="Measurement site:" />
                <ComboBox Grid.Row="3" Grid.Column="1" 
                          SelectedItem="{Binding Site}" Style="{StaticResource MeasurementParamComboBoxStyle}"
                          ItemsSource="{Binding Source={StaticResource MeasurementSiteEnum}}" />

                <Label Grid.Row="4" Grid.Column="0"  Content="Test subject position:" />
                <ComboBox Grid.Row="4" Grid.Column="1" 
                          SelectedItem="{Binding Position}" Style="{StaticResource MeasurementParamComboBoxStyle}"
                          ItemsSource="{Binding Source={StaticResource PositionDuringMeasurementEnum}}" />
            </Grid>

            <Expander Grid.Row="5" Margin="0  10"  mah:ControlsHelper.ContentCharacterCasing="Normal"
                      IsExpanded="{Binding Id, Mode=OneTime, Converter={StaticResource idToBooleanConverter}}">
                <Expander.Style>
                    <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
                        <Setter Property="Header" Value="Settings for this measurement"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MeasuredValues, Converter={StaticResource measuredDataLengthToBooleanConverter}}"
                                         Value="false">
                                <Setter Property="Header" Value="Settings for this measurement (can be changed only if the measurement data is empty)"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>
                <Grid IsEnabled="{Binding MeasuredValues, Converter={StaticResource measuredDataLengthToBooleanConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <views:MechanismParametersView Grid.Column="0"  DataContext="{Binding MechanismParametersVm}"  />
                    <views:StimulationParametersView Grid.Column="1" HorizontalAlignment="Center" DataContext="{Binding StimulationParametersVm}" />
                </Grid>
            </Expander>

            <Expander Grid.Row="7" Header="Measured data" mah:ControlsHelper.ContentCharacterCasing="Normal" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <livecharts:CartesianChart Foreground="{StaticResource MebsterColor}"  
                                               DisableAnimations="True" MinHeight="230" Margin="10 10 10 0">
                        <livecharts:CartesianChart.AxisY>
                            <livecharts:Axis MinValue="0" Title="Contraction Force [N]" />
                        </livecharts:CartesianChart.AxisY>

                        <livecharts:CartesianChart.AxisX>
                            <livecharts:Axis MinValue="0" Title="Time [s]" />
                        </livecharts:CartesianChart.AxisX>

                        <livecharts:CartesianChart.SeriesColors>
                            <livecharts:ColorsCollection>
                                <Color>Aqua</Color>
                                <Color R="50" G="40" B="130" />
                            </livecharts:ColorsCollection>
                        </livecharts:CartesianChart.SeriesColors>

                        <livecharts:CartesianChart.Series>
                            <livecharts:LineSeries Title="Measured force" Values="{Binding MeasuredValues}"
                                           Configuration="{StaticResource chartPointMapper}"/>
                        </livecharts:CartesianChart.Series>
                    </livecharts:CartesianChart>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Content="Start measurement" Command="{Binding StartMeasurementCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="ToolTip" Value="Check device connection" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Grid.Column="1" Content="Stop measurement" Command="{Binding StopMeasurementCommand}"/>
                        <Button Grid.Column="2" Content="Clean data" Command="{Binding CleanRecordedDataCommand}"/>
                    </Grid>
                </Grid>
            </Expander>

            <StackPanel Grid.Row="9" Orientation="Horizontal">
                <Button Content="Save" extensions:RelayCommandExtensions.IsCommandUpdateEnabled="True"
                    Command="{Binding SaveCommand}"/>
                <Button Content="Delete" Command="{Binding DeleteCommand}"/>
            </StackPanel>

        </Grid>
    </ScrollViewer>
</UserControl>
