<Application x:Class="BleRecorder.UI.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BleRecorder.UI.WPF"
             xmlns:viewModel="clr-namespace:BleRecorder.UI.WPF.ViewModels"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:views="clr-namespace:BleRecorder.UI.WPF.Views"
             xmlns:resouces="clr-namespace:BleRecorder.UI.WPF.Views.Resouces"
             Startup="Application_Startup"
             Exit="Application_OnExit">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/dark.indigo.xaml" />

                <ResourceDictionary>
                    <!--Region Colors-->
                    <SolidColorBrush x:Key="MainThemeColorAccent" Color="#322882"/>
                    <SolidColorBrush x:Key="ErrorColor" Color="DarkRed"/>
                    <SolidColorBrush x:Key="ErrorTextColor" Color="OrangeRed"/>
                    <SolidColorBrush x:Key="TabBackground" Color="#252525"/>
                    <!--EndRegion-->

                    <!--Region Implicit MVVM teplates-->
                    <DataTemplate DataType="{x:Type viewModel:TestSubjectDetailViewModel}">
                        <views:TestSubjectDetailView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:MeasurementDetailViewModel}">
                        <views:MeasurementDetailView/>
                    </DataTemplate>
                    <!--EndRegion-->

                    <!-- Region Implicit GLOBAL styles -->
                    <Style TargetType="mah:NumericUpDown" BasedOn="{StaticResource {x:Type mah:NumericUpDown}}">
                        <Setter Property="Margin" Value="3"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="TextAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="12"/>
                    </Style>

                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Width" Value="150"/>
                        <Setter Property="Margin" Value="10"/>
                        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                    </Style>

                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Margin" Value="3"/>
                    </Style>


                    <!--<Style TargetType="GroupBox"  BasedOn="{StaticResource {x:Type GroupBox}}">
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                    </Style>-->

                    <Style TargetType="Expander"  BasedOn="{StaticResource {x:Type Expander}}">
                        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                        <Setter Property="Margin" Value="0 10 0 0"/>
                    </Style>

                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Margin" Value="0 0 0 12"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="placeholder"/>
                                        <TextBlock FontSize="10" Foreground="{StaticResource ErrorTextColor}" 
                                                   Text="{Binding ElementName=placeholder, 
                                                    Path=AdornedElement.(Validation.Errors)/ErrorContent}"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="{StaticResource ErrorColor}"/>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, 
                                    Path=(Validation.Errors)/ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="Foreground" Value="#CCCCCC"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <!-- EndRegion -->

                    <!-- Region Converters -->
                    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
                    <resouces:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
                    <resouces:MeasuredDataToBooleanConverter x:Key="measuredDataLengthToBooleanConverter"/>
                    <resouces:IdToBooleanConverter x:Key="idToBooleanConverter"/>
                    <resouces:EnumToDescriptionConverter x:Key="enumDescriptionConverter"/>
                    <!-- EndRegion -->

                    <Style x:Key="NotesTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="AcceptsTab" Value="true"/>
                        <Setter Property="AcceptsReturn" Value="true"/>
                    </Style>

                    <Style x:Key="MeasurementParamComboBox" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="ToolTip" Value="Measurement parameters can be changed only if the measurement data are empty."/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="MeasurementParamNumericBox" TargetType="mah:NumericUpDown" BasedOn="{StaticResource {x:Type mah:NumericUpDown}}">
                        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="ToolTip" Value="Measurement parameters can be changed only if the measurement data are empty."/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
